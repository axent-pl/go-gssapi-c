name: Checks

on:
  push:
  pull_request:

permissions:
  contents: read
    
jobs:

  consistency-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
  
    - name: Set up Go 1.24
      uses: actions/setup-go@v5
      with:
          go-version: 1.24.x

    - name: OS details
      run: |
          uname -a
          if [ -e /etc/os-release ]; then cat /etc/os-release; fi

    - name: Install packages
      if: ${{ runner.os == 'Linux' }}
      run: |
          sudo apt-get -y install krb5-user libkrb5-dev

    - name: Code format check
      run: ./.github/scripts/gofmt

    - name: Static check
      uses: dominikh/staticcheck-action@v1

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest

  basic-tests:
    name: Basic tests
    strategy:
      fail-fast: false
      matrix:
#        os: ['windows-latest', 'ubuntu-latest']
#        os: ['ubuntu-latest', 'macos-latest']
        os: ['ubuntu-latest']
        go-version: ['1.24.x', '1.25.x' ]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: OS details
      run: |
          echo This is Github OS ${{ runner.os }}
          uname -a
          if [ -e /etc/os-release ]; then cat /etc/os-release; fi

    - name: Install Ubuntu packages
      if: ${{ runner.os == 'Linux' }}
      run: |
          sudo apt-get -y install krb5-user libkrb5-dev

    - name: Install MacOS packages
      if: ${{ runner.os == 'macOS' }}
      run: |
          brew install heimdal
          echo "PKG_CONFIG_PATH=/opt/homebrew/opt/heimdal/lib/pkgconfig" >>$GITHUB_ENV

    - name: Generate test includes
      run: |
        echo pkgs=$(go list ./... | grep -v /examples/) >> "$GITHUB_ENV"

    - name: Run tests
      run: go test  $pkgs -count 100 -coverprofile=cover.out -covermode=atomic

    - name: Check test coverage
      uses: jake-scott/go-test-coverage@v1.0.0
      with:
        config: ./.testcoverage.yml
